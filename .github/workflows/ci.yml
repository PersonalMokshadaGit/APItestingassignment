on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    env:
      BASE_URL: http://localhost:8000  # Example env var for your API

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up JDK for Maven
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      # Set up Python for API
      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      # Install Python dependencies
      - name: Install Python requirements
        run: |
          cd bookstore/
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Start the API server in background
      - name: Start Python API server
        run: |
          nohup uvicorn main:app --host 0.0.0.0 --port 8000 > uvicorn.log 2>&1 &
          echo $! > uvicorn_pid.txt
          sleep 5
          working-directory: bookstore

      # Run Maven tests with env variables
      - name: Run tests and generate Allure results
        run: mvn clean test

      # Upload Allure test results
      - name: Upload Allure results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-results
          path: target/allure-results/

      # Optional: Generate Allure HTML report
      - name: Generate Allure Report
        if: always()
        run: |
          wget https://github.com/allure-framework/allure2/releases/download/2.27.0/allure-2.27.0.tgz
          tar -xzf allure-2.27.0.tgz
          ./allure-2.27.0/bin/allure generate target/allure-results --clean -o allure-report

      - name: Upload Allure Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: allure-report/